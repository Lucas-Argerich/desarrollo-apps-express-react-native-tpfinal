// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Usuario {
  idUsuario     Int        @id @default(autoincrement())
  mail          String?    @unique @db.VarChar(150)
  nickname      String     @db.VarChar(100)
  password      String?     @db.VarChar(60)
  habilitado    String     @db.VarChar(2)
  nombre        String?    @db.VarChar(150)
  direccion     String?    @db.VarChar(150)
  avatar        String?    @db.VarChar(300)
  alumno        Alumno?
  recetas       Receta[]
  calificaciones Calificacion[]
  codigosVerificacion CodigosVerificacion[]
}

model Alumno {
  idAlumno         Int      @id
  numeroTarjeta    String? @db.VarChar(12)
  dniFrente        String? @db.Text
  dniFondo         String? @db.Text
  tramite          String? @db.VarChar(12)
  cuentaCorriente  Decimal? @db.Decimal(12,2)
  usuario          Usuario  @relation(fields: [idAlumno], references: [idUsuario])
  asistencias      AsistenciaCurso[]
}

model TipoReceta {
  idTipo      Int      @id @default(autoincrement())
  descripcion String? @db.VarChar(250)
  recetas     Receta[]
}

model Receta {
  idReceta           Int             @id @default(autoincrement())
  idUsuario          Int?
  nombreReceta       String?         @db.VarChar(500)
  descripcionReceta  String?         @db.VarChar(1000)
  fotoPrincipal      String?         @db.VarChar(300)
  porciones          Int?
  cantidadPersonas   Int?
  idTipo             Int?
  usuario            Usuario?        @relation(fields: [idUsuario], references: [idUsuario])
  tipo               TipoReceta?     @relation(fields: [idTipo], references: [idTipo])
  utilizados         Utilizado[]
  calificaciones     Calificacion[]
  pasos              Paso[]
  fotos              Foto[]
}

model Ingrediente {
  idIngrediente  Int         @id @default(autoincrement())
  nombre         String?     @db.VarChar(200)
  utilizados     Utilizado[]
}

model Unidad {
  idUnidad     Int         @id @default(autoincrement())
  descripcion  String      @db.VarChar(50)
  utilizados   Utilizado[]
  conversionesOrigen Conversion[] @relation("UnidadOrigen")
  conversionesDestino Conversion[] @relation("UnidadDestino")
}

model Utilizado {
  idUtilizado     Int         @id @default(autoincrement())
  idReceta        Int?
  idIngrediente   Int?
  idUtencilio     Int?
  cantidad        Int?
  idUnidad        Int?
  observaciones   String?     @db.VarChar(500)
  receta          Receta?     @relation(fields: [idReceta], references: [idReceta])
  ingrediente     Ingrediente?@relation(fields: [idIngrediente], references: [idIngrediente])
  unidad          Unidad?     @relation(fields: [idUnidad], references: [idUnidad])
  utencilio       Utencilio?  @relation(fields: [idUtencilio], references: [idUtencilio])
}

model Calificacion {
  idCalificacion Int      @id @default(autoincrement())
  idUsuario      Int?
  idReceta       Int?
  calificacion   Int?
  comentarios    String?  @db.VarChar(500)
  usuario        Usuario? @relation(fields: [idUsuario], references: [idUsuario])
  receta         Receta?  @relation(fields: [idReceta], references: [idReceta])
}

model Conversion {
  idConversion      Int     @id @default(autoincrement())
  idUnidadOrigen    Int
  idUnidadDestino   Int
  factorConversiones Float?
  unidadOrigen      Unidad  @relation("UnidadOrigen", fields: [idUnidadOrigen], references: [idUnidad])
  unidadDestino     Unidad  @relation("UnidadDestino", fields: [idUnidadDestino], references: [idUnidad])
}

model Paso {
  idPaso     Int      @id @default(autoincrement())
  idReceta   Int?
  nroPaso    Int?
  texto      String?  @db.VarChar(4000)
  receta     Receta?  @relation(fields: [idReceta], references: [idReceta])
  multimedia Multimedia[]
}

model Foto {
  idfoto     Int      @id @default(autoincrement())
  idReceta   Int
  urlFoto    String?  @db.VarChar(300)
  extension  String?  @db.VarChar(5)
  receta     Receta   @relation(fields: [idReceta], references: [idReceta])
}

model Multimedia {
  idContenido   Int      @id @default(autoincrement())
  idPaso        Int
  tipo_contenido String  @db.VarChar(10)
  extension     String?  @db.VarChar(5)
  urlContenido  String?  @db.VarChar(300)
  paso          Paso     @relation(fields: [idPaso], references: [idPaso])
}

model Sede {
  idSede            Int      @id @default(autoincrement())
  nombreSede        String   @db.VarChar(150)
  direccionSede     String   @db.VarChar(250)
  telefonoSede      String?  @db.VarChar(15)
  mailSede          String?  @db.VarChar(150)
  whatsApp          String?  @db.VarChar(15)
  tipoBonificacion  String?  @db.VarChar(20)
  bonificacionCursos Decimal? @db.Decimal(10,2)
  tipoPromocion     String?  @db.VarChar(20)
  promocionCursos   Decimal? @db.Decimal(10,2)
  cronogramas       CronogramaCurso[]
}

model Curso {
  idCurso         Int      @id @default(autoincrement())
  descripcion     String? @db.VarChar(300)
  contenidos      String? @db.VarChar(500)
  requerimientos  String? @db.VarChar(500)
  duracion        Int?
  precio          Decimal? @db.Decimal(12,2)
  modalidad       String   @db.VarChar(20)
  cronogramas     CronogramaCurso[]
}

model CronogramaCurso {
  idCronograma        Int      @id @default(autoincrement())
  idSede              Int
  idCurso             Int
  fechaInicio         DateTime?
  fechaFin            DateTime?
  vacantesDisponibles Int?
  sede                Sede     @relation(fields: [idSede], references: [idSede])
  curso               Curso    @relation(fields: [idCurso], references: [idCurso])
  asistencias         AsistenciaCurso[]
}

model AsistenciaCurso {
  idAsistencia   Int      @id @default(autoincrement())
  idAlumno       Int
  idCronograma   Int
  fecha          DateTime?
  alumno         Alumno   @relation(fields: [idAlumno], references: [idAlumno])
  cronograma     CronogramaCurso @relation(fields: [idCronograma], references: [idCronograma])
}

model CodigosVerificacion {
  id          Int      @id @default(autoincrement())
  idUsuario   Int
  codigo      String   @db.VarChar(20)
  vencimiento DateTime
  activo      Boolean  @default(true)
  usuario     Usuario? @relation(fields: [idUsuario], references: [idUsuario])
  @@unique([idUsuario])
}

model Utencilio {
  idUtencilio Int @id @default(autoincrement())
  nombre      String @unique
  descripcion String?
  utilizados  Utilizado[]
} 